% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute.R
\name{impute}
\alias{impute}
\title{Impute data and return a reusable recipe.}
\usage{
impute(data = NULL, target = NULL, grain = NULL, rec_obj = NULL,
  numeric_method = "mean", nominal_method = "new_category",
  numeric_params = NULL, nominal_params = NULL)
}
\arguments{
\item{data}{A dataframe or tibble containing data to impute.}

\item{target}{A string, the name of the target column. Required.}

\item{grain}{A string, the name of the grain column. Required.}

\item{rec_obj}{Optional, a recipe object. If provided, this recipe will be
used to bake data contained in data.}

\item{numeric_method}{Defaults to \code{"mean"}. Other choices are
\code{"bagimpute"} or \code{"knnimpute"}.}

\item{nominal_method}{Defaults to \code{"new_category"}. Other choices are
\code{"bagimpute"} or \code{"knnimpute"}.}

\item{numeric_params}{A named list with parmeters to use with chosen
imputation method on numeric data. Options are \code{bag_model},
\code{bag_options}, \code{knn_K}, \code{impute_with}, or \code{seed_val}.
See \link{step_bagimpute} or \link{step_knnimpute} for details.}

\item{nominal_params}{A named list with parmeters to use with chosen
imputation method on nominal data. Options are \code{bag_model},
\code{bag_options}, \code{knn_K}, \code{impute_with}, or \code{seed_val}.
See \link{step_bagimpute} or \link{step_knnimpute} for details.}
}
\value{
Imputed data and a reusable recipe object for future imputation.
}
\description{
`impute` will impute your data using a variety of methods for
both nominal and numeric data. Currently supports mean (numeric only),
new_category (categorical only), bagged trees, or knn. Grain and target will
not be imputed.
}
\examples{
library(recipes)

n = 100
set.seed(9)
d <- tibble::tibble(patient_id = 1:n,
                    age = sample(c(30:80), size = n, replace = TRUE),
                    hemoglobin_count = rnorm(n, mean = 15, sd = 1),
                    hemoglobin_category = sample(c("Low", "Normal", "High", NA),
                                                 size = n, replace = TRUE),
                    disease = ifelse(hemoglobin_count < 15, "Yes", "No")
)
d$age[sample(1:n, size = 20)] <- NA
d$hemoglobin_count[sample(1:n, size = 15)] <- NA


d_train <- d[1:80, ]
d_test <- d[81:100, ]
# Train imputer and apply
data_and_recipe <- impute(data = d_train,
                          grain = "patient_id",
                          target = "disease")

# Apply to new data
res <- impute(data = d_test,
              grain = "patient_id",
              target = "disease",
              rec_obj = data_and_recipe$rec_obj)

# Specify methods:
data_and_recipe <- impute(data = d_train,
                          grain = "patient_id",
                          target = "disease",
                          numeric_method = "bagimpute",
                          nominal_method = "new_category")

# Specify method and param:
data_and_recipe <- impute(data = d_train,
                          grain = "patient_id",
                          target = "disease",
                          nominal_method = "knnimpute",
                          nominal_params = list(knn_K = 4))




}
