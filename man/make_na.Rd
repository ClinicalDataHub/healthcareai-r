% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/missingness.R
\name{make_na}
\alias{make_na}
\title{Replaces missing data with NA}
\usage{
make_na(d, to_replace, drop_levels = TRUE)
}
\arguments{
\item{d}{A dataframe or tibble}

\item{to_replace}{A vector of the values or string of the value that will be
replaced with NA}

\item{drop_levels}{a boolean to drop unused levels in factor vectors that are
created from missingness values being replaced. Default = TRUE}
}
\value{
A tibble with the missing data replaced with NA
}
\description{
This function replaces any given value in a dataframe or tibble
  with NA. It can be used when missing values are filled with characters like
  "missing". Numeric vector columns that were originally loaded as character
  or factor columns (because of a missingness string), are converted to
  numeric vectors when the missingness string is replaced.
}
\examples{
dat <- data.frame(gender = c("male", "male", "female", "male", "missing"),
              name = c("Paul", "Jim", "Sarah", "missing", "Alex"),
              weight = c(139, 0, 193, 158, 273))

# Replace "missing" in `dat`
make_na(dat, "missing")

# If you didn't know what was missing in `dat`, you can run
# \\code{\\link{missingness}}. This function will tell you that it "Found these
# strings"... that could be possible missingness values. It will then propose
# how to remove these values with a call to this function.
missingness(dat)
make_na(dat, "missing")

# If you want to keep original levels in factor vectors, you can set
# `drop_levels` to `FALSE`. This means that `name` and `gender` factor
# vectors will still contain "missing" in their levels even though it is not
# in the vector anymore.
make_na(dat, "missing", drop_levels = FALSE)

# If there are multiple missing values, you can pass a vector of the values
# that represent missingness to replace all of them.
dat <- data.frame(gender = c("male", "??", "female", "male", "missing"),
              age = c(64, 52, 75, "missing", 70),
              weight = c(139, 0, 193, "??", 273),
              stringsAsFactors = FALSE)

make_na(dat, c("missing", "??"))

# Note: in this last example, `age` should be loaded as a numeric vector, but
# since "missing" is present, it is stored as a character vector. When
# "missing" is replaced, `age` will be converted to a numeric vector.

}
