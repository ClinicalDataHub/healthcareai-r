% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune.R
\name{tune}
\alias{tune}
\title{Identify the best performing model by tuning hyperparameters via
cross-validation}
\usage{
tune(data, outcome, model_class, models = c("RF", "lasso"), n_folds = 5,
  tune_depth = 10, tune_method = "random", metric = c("RMSE", "MAE",
  "AUROC", "AUPR", "accuracy"), hyperparameters = NULL)
}
\arguments{
\item{data}{A data frame}

\item{outcome}{Name of the column to predict}

\item{model_class}{One of "regression", "classification",
"multiclass", or "unsupervised", but only regression and classification are
being implimented initially.}

\item{models}{Names of models to try, by default for regression and
classification "RF" for random forest and "lasso" for regularized regression.
See \link{\code{supported_models}} for available models.}

\item{n_folds}{How many folds to use in cross-validation? Default = 5.}

\item{tune_depth}{How many hyperparameter combinations to try? Defualt = 10.}

\item{tune_method}{How to search hyperparameter space? One of "random"
(default) or "grid".}

\item{metric}{What metric to use to assess model performance? Defaults to
RMSE for model_class = regression and AUROC for model_class = classification.}

\item{hyperparameters}{Optional, overrides \code{tune_depth} and
\code{tune_method} if provided. A list of lists. The names of the outer-list
must match \code{models}. The names of each inner-list must match the
hyperparameters available to tune over for the respective model. Entries
in each inner-list are the values of the hyperparameter to try. These will
be expanded to run a full grid search over every combination of values. For
details on support models and hyperparameters see
\link{\code{supported_models}}.}
}
\value{
A model_list object
}
\description{
Identify the best performing model by tuning hyperparameters via
cross-validation
}
\details{
Note that in general a model is trained for each hyperparameter
combination in each fold for each model, so run time is a function of
length(models) x n_folds x tune_depth.
}
\examples{
tune()
}
