% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kmeans-clustering-method.R
\docType{class}
\name{KmeansClustering}
\alias{KmeansClustering}
\title{Build clusters using kmeans()}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
KmeansClustering(object, df, grainCol, labelCol, numOfCluster,
usePrinComp, numOfPrinComp,impute, debug)
}
\arguments{
\item{object}{of UnsuperviseModelParameters class for $new() constructor}

\item{df}{Dataframe whose columns are used for calc.}

\item{grainCol}{Optional. The dataframe's column that has IDs pertaining to 
the grain. No ID columns are truly needed for this step.}

\item{labelCol}{Optional. In case the data frame contains a column that labels
each row of the df. Need to be removed befroe clustering.}

\item{numOfCluster}{Number of clusters you want to build.}

\item{usePrinComp}{Optional. TRUE or FALSE. If TRUE, will use the principle components
to perform K-means clustering. Default is FALSE.}

\item{numOfPrinComp}{Optional. Number of principle components you want to use to perform 
K-means clustering.}

\item{impute}{Set all-column imputation to F or T.
This uses mean replacement for numeric columns
and most frequent for factorized columns.
F leads to removal of rows containing NULLs.}

\item{debug}{Provides the user extended output to the console, in order
to monitor the calculations throughout. Use T or F.}
}
\description{
This step allows you to use kmeans() to build clusters, based on
your data.
}
\examples{

#### Example using iris dataset ####
ptm <- proc.time()
library(healthcareai)

data(iris)
head(iris)

set.seed(2017)

p <- UnsupervisedModelParams$new()
p$df <- iris
p$labelCol <- "Species"
p$impute <- TRUE
p$debug <- FALSE
p$cores <- 1

# Run k means clustering
cl <- KmeansClustering$new(p)
cl$run()

# Get the fit result
cl$getKmeansfit()

# Get the elbow plot which also presents the optimal number of clusters
cl$getElbowPlot()

# Get the 2D representation of the cluster solution
cl$get2DClustersPlot()

# Get the sillhouette plot
cl$getSilhouettePlot()
 
# Get a confusion matrix if labelCol exists
cl$getConfusionMatrix()

# Get cluster labels
cl$getClusterLabels() ## label cluster 1 with "versicolor"
                      ## label cluster 2 with "setosa"
                      ## label cluster 3 with "virginica"

# Get the output data frame
dfOut <- cl$getOutDf()
head(dfOut)

## Write to CSV (or JSON, MySQL, etc) using plain R syntax
## write.csv(dfOut,'path/clusteringresult.csv')

print(proc.time() - ptm)

#### Example using iris data and PCA ####
ptm <- proc.time()
library(healthcareai)

set.seed(2017)

p <- UnsupervisedModelParams$new()
p$df <- iris
p$labelCol <- "Species"
p$cores <- 1
usePrinComp <- TRUE

# Run k means clustering
cl <- KmeansClustering$new(p)
cl$run()

# Get the scree plot
## This plot presents the fraction of total variance in the data as explained
## or represented by each principle component.
cl$getScreePlot()

# According to the scree plot, we may decide to use the first 2 PCs to do clustering.
p$usePrinComp <- TRUE
p$numOfPrinComp <- 2 ## Not necessary since the default of numOfPrinComp is 2 

# Run k means clustering
cl <- KmeansClustering$new(p)
cl$run()

# Get the fit result
cl$getKmeansfit()

print(proc.time() - ptm)

}
\references{
\url{http://hctools.org/}

\url{https://github.com/bryanhanson/ChemoSpecMarkeR/blob/master/R/findElbow.R}
}
\seealso{
\code{\link{healthcareai}}
}
\keyword{datasets}
