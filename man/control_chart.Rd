% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control_chart.R
\name{control_chart}
\alias{control_chart}
\title{Create a control chart}
\usage{
control_chart(d, measure, x, group1, group2, center_line = mean, sigmas = 3,
  save_to, plot_width = 8, plot_height = 4, plot_title = NULL,
  plot_catpion = NULL, plot_font_size = 11)
}
\arguments{
\item{d}{data frame}

\item{measure}{variable of interest, to go on the y-axis}

\item{x}{variable to go on the x-axis, often a time variable. If unspecified
row indices will be used.}

\item{group1}{Optional grouping variable to be panelled horizontally.}

\item{group2}{Optional grouping variable to be panelled vertically.}

\item{center_line}{Function used to calculate central tendency. 
Defaults to mean.}

\item{sigmas}{Number of standard deviations above and below the central 
tendency to call a point influenced by "special cause variation".
Defaults to 3.}

\item{save_to}{Optional file path to save chart. If not provided, the chart
will be printed on screen.}

\item{plot_width}{In inches. Only useful if save_to is specified.}

\item{plot_height}{In inches. Only useful if save_to is specified.}

\item{plot_title}{Title in upper-left.}

\item{plot_catpion}{Caption in lower-right.}

\item{plot_font_size}{Base font size; text elements will be scaled to this.}
}
\value{
Generally called for the side effect of printing the control chart
if save_to is not specified or saving the control chart to file if save_to
is specified. Invisibly, returns a ggplot object for further customization.
}
\description{
Create a control, aka Shewhart chart
\url{https://en.wikipedia.org/wiki/Control_chart}.
}
\examples{
d <- tibble::data_frame(
day = sample(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), 100, TRUE),
person = sample(c("Tom", "Jane", "Alex"), 100, TRUE),
count = rbinom(100, 20, ifelse(day == "Friday", .5, .2)),
date = Sys.Date() - sample(100))
control_chart(d, "count")
control_chart(d, "count", group1 = "day", group2 = "person")
x <- control_chart(d, "count", "date")
x + 
  ggplot2::ylab("Number of Adverse Events") + 
  ggplot2::scale_x_date(name = "Week of", date_breaks = "week") +
  ggplot2::theme(axis.text.x = 
                   ggplot2::element_text(angle = -90, vjust = 0.5, hjust=1))
}
